{"version":3,"sources":["components/MyReadsHeader.jsx","components/Book.jsx","components/Shelf.jsx","components/Home.jsx","BooksAPI.js","App.js","index.js"],"names":["MyReadsHeader","className","Book","book","updateBookShelf","imageLinks","thumbnail","shelf","title","authors","Shelf","books","console","log","map","curBook","id","Home","currentlyReading","filter","wantToRead","read","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","App","useState","setBooks","useEffect","fetchBooks","fetch","then","res","json","data","exact","path","element","moveBookTo","updatedBooks","method","body","JSON","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAUeA,EARO,WAClB,OACI,qBAAKC,UAAU,mBAAf,SACI,4CCiCGC,EAnCF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,KAA4B,EAAtBC,gBASkB,QAAD,OAAUD,EAAKE,WAAWC,UAA1B,MAIDH,EAAKI,OAAQJ,EAAKI,MAYfJ,EAAKK,MACHL,EAAKM,SCEjCC,EA3BD,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,MAAOH,EAA6B,EAA7BA,MAAOJ,EAAsB,EAAtBA,gBAI3B,OAHAQ,QAAQC,IAAIF,GACZC,QAAQC,IAAIT,GAGR,sBAAKH,UAAU,YAAf,UACI,qBAAIA,UAAU,kBAAd,cAAkCO,EAAlC,OACA,qBAAKP,UAAU,kBAAf,SACI,qBAAIA,UAAU,aAAd,UACK,IACAU,EAAMG,KAAI,SAACC,GAAD,OACP,6BACI,cAAC,EAAD,CAAMZ,KAAMY,EAASX,gBAAiBA,KADjCW,EAAQC,gBC2B1BC,EArCF,SAACN,EAAOP,GACjBQ,QAAQC,IAAIF,GACZC,QAAQC,WAAWT,GAInB,IAAMc,EAAmBP,EAAMA,MAAMQ,QAAO,SAAChB,GAAD,MAAyB,qBAAfA,EAAKI,SAGrDa,EAAaT,EAAMA,MAAMQ,QAAO,SAAChB,GAAD,MAAyB,eAAfA,EAAKI,SAG/Cc,EAAOV,EAAMA,MAAMQ,QAAO,SAAChB,GAAD,MAAyB,SAAfA,EAAKI,SAE/C,OACI,sBAAKN,UAAU,aAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,qBAAf,UACI,cAAC,EAAD,CACIO,MAAM,oBACNG,MAAOO,EACPd,gBAAiBA,IAGrB,cAAC,EAAD,CAAOI,MAAM,eAAeG,MAAOS,EAAYhB,gBAAiBA,IAEhE,cAAC,EAAD,CAAOI,MAAM,OAAOG,MAAOU,EAAMjB,gBAAiBA,W,OC/B5DkB,EAAM,wCAERC,EAAQC,aAAaD,MAEpBA,IAAOA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAE5E,IAAMC,EAAU,CACZC,OAAQ,mBACRC,cAAeR,GC8CJS,EA/CH,WAER,MAA0BC,mBAAS,IAAnC,mBAAOtB,EAAP,KAAcuB,EAAd,KAGAC,qBAAU,WAEN,IAAMC,EAAU,iDAAG,8GDGvBC,MAAM,GAAD,OAAIf,EAAJ,UAAiB,CAAEO,YACnBS,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAK9B,SCLF,OAETA,EAFS,OAIfuB,EAASvB,GAJM,2CAAH,qDAOhByB,MACD,IAmBH,OACI,qBAAKnC,UAAU,MAAf,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CACIyC,OAAK,EACLC,KAAK,IACLC,QAAS,cAAC,EAAD,CAAMjC,MAAOA,EAAOP,gBAtBrB,SAACW,EAAS8B,GAE9B,IDNe1C,EAAMI,ECMfuC,EAAenC,EAAMG,KAAI,SAACX,GAC5B,OAAIA,EAAKa,KAAOD,EAAQC,IACpBb,EAAKI,MAAQsC,EAEN9B,GAGJZ,KDbIA,ECgBCY,EDhBKR,ECgBIsC,EDf7BR,MAAM,GAAD,OAAIf,EAAJ,kBAAiBnB,EAAKa,IAAM,CAC7B+B,OAAQ,MACRlB,QAAQ,2BACDA,GADA,IAEH,eAAgB,qBAEpBmB,KAAMC,KAAKC,UAAU,CAAE3C,YACxB+B,MAAK,SAACC,GAAD,OAASA,EAAIC,UCSjBN,EAASY,aCjCjBK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.f133892e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst MyReadsHeader = () => {\r\n    return (\r\n        <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyReadsHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Book = ({ book, updateBookShelf }) => {\r\n    <li>\r\n        <div className=\"book\">\r\n            <div className=\"book-top\">\r\n                <div\r\n                    className=\"book-cover\"\r\n                    style={{\r\n                        width: 125,\r\n                        height: 200,\r\n                        backgroundImage: `url(\"${book.imageLinks.thumbnail}\")`\r\n                    }}></div>\r\n                <div className=\"book-shelf-changer\">\r\n                    <select\r\n                        defaultValue={book.shelf ? book.shelf : 'none'}\r\n                        onChange={(e) => updateBookShelf(book, e.target.value)}>\r\n                        <option defaultValue=\"move\" disabled>\r\n                            Move to...\r\n                        </option>\r\n                        <option defaultValue=\"currentlyReading\">Currently Reading</option>\r\n                        <option defaultValue=\"wantToRead\">Want to Read</option>\r\n                        <option defaultValue=\"read\">Read</option>\r\n                        <option defaultValue=\"none\">None</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"book-title\">{book.title}</div>\r\n            <div className=\"book-authors\">{book.authors}</div>\r\n        </div>\r\n    </li>;\r\n};\r\n\r\nBook.propTypes = {\r\n    book: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Book;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Book from './Book';\r\n\r\nconst Shelf = ({ books, title, updateBookShelf }) => {\r\n    console.log(books);\r\n    console.log(updateBookShelf);\r\n\r\n    return (\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\"> {title} </h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    {' '}\r\n                    {books.map((curBook) => (\r\n                        <li key={curBook.id}>\r\n                            <Book book={curBook} updateBookShelf={updateBookShelf} />\r\n                        </li>\r\n                    ))}\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nShelf.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    updateBookShelf: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Shelf;\r\n","import React from 'react';\r\nimport MyReadsHeader from './MyReadsHeader';\r\nimport Shelf from './Shelf';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Home = (books, updateBookShelf) => {\r\n    console.log(books);\r\n    console.log(typeof updateBookShelf);\r\n    // Layout\r\n\r\n    // Shelf 1\r\n    const currentlyReading = books.books.filter((book) => book.shelf === 'currentlyReading');\r\n\r\n    // Shelf 2\r\n    const wantToRead = books.books.filter((book) => book.shelf === 'wantToRead');\r\n\r\n    // Shelf 3\r\n    const read = books.books.filter((book) => book.shelf === 'read');\r\n\r\n    return (\r\n        <div className=\"list-books\">\r\n            <MyReadsHeader />\r\n            <div className=\"list-books-content\">\r\n                <Shelf\r\n                    title=\"Currently Reading\"\r\n                    books={currentlyReading}\r\n                    updateBookShelf={updateBookShelf}\r\n                />\r\n\r\n                <Shelf title=\"Want to Read\" books={wantToRead} updateBookShelf={updateBookShelf} />\r\n\r\n                <Shelf title=\"Read\" books={read} updateBookShelf={updateBookShelf} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nHome.propTypes = {\r\n    books: PropTypes.array.isRequired,\r\n    updateBookShelf: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Home;\r\n","const api = 'https://reactnd-books-api.udacity.com';\r\n\r\nlet token = localStorage.token;\r\n\r\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\r\n\r\nconst headers = {\r\n    Accept: 'application/json',\r\n    Authorization: token\r\n};\r\n\r\nexport const get = (bookId) =>\r\n    fetch(`${api}/books/${bookId}`, { headers })\r\n        .then((res) => res.json())\r\n        .then((data) => data.book);\r\n\r\nexport const getAll = () =>\r\n    fetch(`${api}/books`, { headers })\r\n        .then((res) => res.json())\r\n        .then((data) => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n    fetch(`${api}/books/${book.id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n            ...headers,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ shelf })\r\n    }).then((res) => res.json());\r\n\r\nexport const search = (query, maxResults) =>\r\n    fetch(`${api}/search`, {\r\n        method: 'POST',\r\n        headers: {\r\n            ...headers,\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ query, maxResults })\r\n    })\r\n        .then((res) => res.json())\r\n        .then((data) => data.books);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { useEffect, useState } from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport * as BooksAPI from './BooksAPI';\r\n\r\nconst App = () => {\r\n    // Book state\r\n    const [books, setBooks] = useState([]);\r\n\r\n    // GET Books Hook\r\n    useEffect(() => {\r\n        // Retrieve books from Server\r\n        const fetchBooks = async () => {\r\n            // GET API Call\r\n            const books = await BooksAPI.getAll();\r\n            // Set\r\n            setBooks(books);\r\n        };\r\n        // Call function\r\n        fetchBooks();\r\n    }, []);\r\n\r\n    // UPDATE books from Server\r\n    const updateBookShelf = (curBook, moveBookTo) => {\r\n        // Update books if need be\r\n        const updatedBooks = books.map((book) => {\r\n            if (book.id === curBook.id) {\r\n                book.shelf = moveBookTo;\r\n\r\n                return curBook;\r\n            }\r\n\r\n            return book;\r\n        });\r\n\r\n        BooksAPI.update(curBook, moveBookTo);\r\n        setBooks(updatedBooks);\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <Routes>\r\n                <Route\r\n                    exact\r\n                    path=\"/\"\r\n                    element={<Home books={books} updateBookShelf={updateBookShelf} />}\r\n                />\r\n            </Routes>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}